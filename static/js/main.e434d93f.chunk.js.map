{"version":3,"sources":["Components/firebase.js","Components/Theme.js","Components/Navbar.js","Components/Search.js","Components/Signup.js","Components/Home.js","Components/Shelf.js","Components/SignIn.js","Components/GlobalStyle.js","Components/App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","google","GoogleAuthProvider","db","firestore","darkTheme","background","color","lightTheme","StyledNav","styled","nav","StyledNavItem","span","StyledNavButton","button","Navbar","theme","setTheme","setIsLoggedIn","isLoggedIn","setUsername","setUserEmail","to","onClick","signOut","then","catch","error","console","log","StyledBook","div","StyledContainer","Search","user_UID","username","useState","searchInput","setSearchInput","googleBooksResults","setGoogleBooksResults","uuidv4","formKey","setFormKey","list","setList","modal","setModal","modalIndex","setModalIndex","useEffect","collection","onSnapshot","snapshot","data","docs","map","doc","title","id","modalStyles","overlay","position","backgroundColor","content","display","flexDirection","alignItems","overflow","webkitoverflowscrolling","textAlign","padding","toggleModal","index","prev","StyledActiveUser","length","size","style","margin","onSubmit","e","preventDefault","fetch","res","ok","json","jsonRes","booksWithImageLinks","items","filter","volumeInfo","imageLinks","description","value","onChange","currentTarget","type","width","height","src","thumbnail","alt","book_ID","get","docSnapshot","exists","delete","book","set","author","authors","join","alert","addOrRemoveFromList","some","x","modalTargetBook","isOpen","onRequestClose","top","left","border","renderModal","StyledSignup","form","StyledInput","input","StyledP","p","StyledGoogleButton","StyledButton","StyledCard","Signup","resetPassInupt","setResetPassInput","email","password","confirmPassword","setInput","handleChange","target","name","handlePassInput","resetPassword","resetEmail","sendPasswordResetEmail","signInWithPopup","result","credential","user","uid","displayName","errorCode","code","errorMessage","message","test","createUserWithEmailAndPassword","userCredential","required","maxLength","placeholder","minLength","Modal","setAppElement","StyledAbout","StyledHomeButtons","Home","bestsellersList","setBestsellersList","homeList","setHomeList","forEach","thumbnail_URL","results","books","WebkitOverflowScrolling","borderRadius","outline","accessToken","textDecoration","book_image","contributor","rank","timeout","marginBottom","Shlef","emailModal","setEmailModal","isLoggedInAndList","toggleBookModal","sendEmail","emailjs","sendForm","text","reset","window","confirm","removeFromList","paddingTop","className","location","href","marginTop","renderBookModal","SignIn","handlePasswordInput","signInWithEmailAndPassword","GlobalStyle","createGlobalStyle","props","App","setUser_UID","userEmail","onAuthStateChanged","googleAuthUser","basename","exact","path","Shelf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e434d93f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_PROJECT_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n});\n\nexport const auth = app.auth();\nexport const google = new firebase.auth.GoogleAuthProvider();\nexport const db = firebase.firestore();\n\nexport default app;\n","export const darkTheme = {\n  background: \"#222831\",\n  color: \"#eeeeee\",\n};\n\nexport const lightTheme = {\n  background: \"#eeeeee\",\n  color: \"#222831\",\n};\n","import React from \"react\";\nimport { auth } from \"./firebase\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GiBookshelf } from \"react-icons/gi\";\nimport { GoSearch, GoHome } from \"react-icons/go\";\nimport { FaSun, FaMoon } from \"react-icons/fa\";\nimport { lightTheme, darkTheme } from \"./Theme\";\n\nconst StyledNav = styled.nav`\n  position: -webkit-sticky; /* Safari */\n  position: sticky;\n  top: 0;\n  font-size: 20px;\n  background-color: #00adb5;\n  padding: 15px;\n`;\n\nconst StyledNavItem = styled.span`\n  padding: 10px;\n  margin: 10px;\n`;\n\nconst StyledNavButton = styled.button`\n  border: none;\n  background-color: #eeeeee;\n  border: 2px solid #222831;\n  font-size: 14px;\n  margin-left: 5px;\n  padding: 5px;\n  border-radius: 5px;\n`;\n\nfunction Navbar({\n  theme,\n  setTheme,\n  setIsLoggedIn,\n  isLoggedIn,\n  setUsername,\n  setUserEmail,\n}) {\n  function handleLogout() {\n    auth\n      .signOut()\n      .then(() => {\n        setIsLoggedIn(null);\n        setUsername(\"\");\n        setUserEmail(null);\n      })\n      .catch(error => {\n        console.log(`Could not log out ${error}`);\n      });\n  }\n\n  function handleThemeToggle() {\n    let updatedTheme = theme === darkTheme ? lightTheme : darkTheme;\n    setTheme(updatedTheme);\n  }\n\n  return (\n    <StyledNav>\n      <StyledNavItem>\n        <Link to=\"/\">{<GoHome />}</Link>\n      </StyledNavItem>\n      <StyledNavItem>\n        <Link to=\"/shelf\">{<GiBookshelf />}</Link>\n      </StyledNavItem>\n      <StyledNavItem onClick={handleThemeToggle}>\n        {theme === lightTheme ? <FaMoon /> : <FaSun />}\n      </StyledNavItem>\n      <StyledNavItem>\n        <Link to=\"/search\">{<GoSearch />}</Link>\n      </StyledNavItem>\n      {isLoggedIn ? (\n        <StyledNavButton onClick={handleLogout}>\n          <Link to=\"/\">Sign Out</Link>\n        </StyledNavButton>\n      ) : (\n        <StyledNavButton>\n          <Link to=\"/signin\">Sign in</Link>\n        </StyledNavButton>\n      )}\n    </StyledNav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { db } from \"./firebase\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\nimport { GiArchiveResearch } from \"react-icons/gi\";\nimport { StyledActiveUser } from \"./Home\";\nimport { FiUserCheck } from \"react-icons/fi\";\nimport { AiOutlineDelete, AiOutlineClose, AiOutlineInfo } from \"react-icons/ai\";\nimport { BiInfoSquare } from \"react-icons/bi\";\n\nexport const StyledBook = styled.div`\n  margin-top: 35px;\n  padding: 5px;\n  flex-grow: 1;\n`;\n\nexport const StyledContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: stretch;\n  align-items: center;\n  padding: 15px;\n\n  @media (min-width: 900px) {\n    max-width: 65%;\n  }\n\n  @media (min-width: 2500px) {\n    max-width: 45%;\n  }\n`;\n\nfunction Search({ user_UID, isLoggedIn, username, theme }) {\n  const API_KEY = process.env.REACT_APP_FIREBASE_GOOGLE_BOOKS_API_KEY;\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [googleBooksResults, setGoogleBooksResults] = useState([]);\n  const [formKey, setFormKey] = useState(uuidv4());\n  const [list, setList] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [modalIndex, setModalIndex] = useState(-1);\n\n  // will show if a book in search results is already saved in db\n  useEffect(() => {\n    const getBooksfromDb = db.collection(`users/${user_UID}/shelf`);\n\n    getBooksfromDb.onSnapshot(snapshot => {\n      const data = snapshot.docs.map(doc => ({\n        title: doc.id,\n        ...doc.data(),\n      }));\n      setList(data);\n    });\n  }, []);\n\n  function handleChange(e) {\n    setSearchInput(e.currentTarget.value);\n  }\n\n  function handleSearch(e) {\n    e.preventDefault();\n\n    fetch(\n      `https://www.googleapis.com/books/v1/volumes?q=${searchInput}&key=${API_KEY}&maxResults=40`\n    )\n      .then(res => {\n        if (!res.ok) {\n          console.log(\"fetch didn't work\", res);\n        }\n        if (res.ok) {\n          console.log(\"fetch worked\");\n          return res.json();\n        }\n      })\n      .then(jsonRes => {\n        let booksWithImageLinks = jsonRes.items.filter(\n          e => e.volumeInfo.imageLinks && e.volumeInfo.description\n        );\n        setGoogleBooksResults(booksWithImageLinks);\n      })\n      .catch(error => {\n        console.log(\"error: \", error);\n      });\n\n    setFormKey(uuidv4());\n  }\n\n  // creates a shelf collection under the user document in firebase\n  function addOrRemoveFromList(e) {\n    const book_ID = db\n      .collection(\"users\")\n      .doc(`${user_UID}`)\n      .collection(`shelf`)\n      .doc(`${e.volumeInfo.title}`);\n\n    book_ID.get().then(docSnapshot => {\n      if (docSnapshot.exists) {\n        book_ID\n          .delete()\n          .then(() => console.log(\"book deleted\"))\n          .catch(error => console.error(\"could not delete book\" + error));\n\n        setList(list.filter(book => book.title !== book_ID));\n      } else {\n        book_ID\n          .set({\n            title: e.volumeInfo.title,\n            author: e.volumeInfo.authors.join(\", \"),\n            thumbnail: e.volumeInfo.imageLinks.thumbnail,\n            description: e.volumeInfo.description,\n          })\n          .then(() => {\n            console.log(\"book successfully saved\");\n          })\n          .catch(error => {\n            alert(\n              \"Please sign in or create an account to add books to your shelf\"\n            );\n            console.error(\"error writing doc: \", error);\n          });\n\n        // add new books to state\n        setList(prev => [\n          ...prev,\n          {\n            title: e.volumeInfo.title,\n            author: e.volumeInfo.authors,\n            thumbnail: e.volumeInfo.imageLinks.thumbnail,\n            description: e.volumeInfo.description,\n          },\n        ]);\n      }\n    });\n  }\n\n  const modalStyles = {\n    overlay: {\n      position: \"fixed\",\n      backgroundColor: \"rgba(255, 255, 255, 0.75)\",\n    },\n    content: {\n      background: theme.background,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      overflow: \"auto\",\n      webkitoverflowscrolling: \"touch\",\n      textAlign: \"center\",\n      padding: \"20px\",\n    },\n  };\n\n  function renderModal(modalIndex) {\n    let modalTargetBook = googleBooksResults[modalIndex];\n    return (\n      modalTargetBook && (\n        <Modal\n          theme={theme}\n          style={modalStyles}\n          isOpen={modal}\n          modalIndex={modalIndex}\n          onRequestClose={() => toggleModal()}\n        >\n          <button\n            style={{ position: \"absolute\", top: 5, left: 5, border: \"none\" }}\n            onClick={() => toggleModal()}\n          >\n            <AiOutlineClose size={20} />\n          </button>\n          <div>\n            <img\n              src={modalTargetBook.volumeInfo.imageLinks.thumbnail}\n              alt={modalTargetBook.volumeInfo.title}\n            ></img>\n          </div>\n          <div>\n            <p>{modalTargetBook.volumeInfo.description}</p>\n            <p>{`by ${modalTargetBook.volumeInfo.authors}`}</p>\n          </div>\n          <div>\n            <button onClick={() => toggleModal()}>close</button>\n          </div>\n        </Modal>\n      )\n    );\n  }\n\n  function toggleModal(index = -1) {\n    setModalIndex(index);\n    setModal(prev => !prev);\n  }\n\n  return (\n    <div>\n      {isLoggedIn && (\n        <div>\n          <FiUserCheck />\n          <StyledActiveUser>{`${username}`}</StyledActiveUser>\n        </div>\n      )}\n      <h1>Search Books</h1>\n      {!googleBooksResults.length && (\n        <GiArchiveResearch size={170} style={{ margin: 20 }} />\n      )}\n      {!isLoggedIn && (\n        <h4>Sign in or create an account to add books to your shelf</h4>\n      )}\n      <form onSubmit={handleSearch} key={formKey}>\n        <input value={searchInput} onChange={handleChange}></input>\n        <button type=\"submit\">search</button>\n      </form>\n      <StyledContainer>\n        {googleBooksResults &&\n          googleBooksResults.map((e, index) => {\n            return (\n              <StyledBook key={uuidv4()}>\n                <img\n                  width=\"128\"\n                  height=\"195\"\n                  src={e.volumeInfo.imageLinks.thumbnail}\n                  alt={e.volumeInfo.title}\n                ></img>\n                <br></br>\n                <button onClick={() => toggleModal(index)}>\n                  {<BiInfoSquare />}\n                </button>\n                {isLoggedIn && (\n                  <button onClick={() => addOrRemoveFromList(e)}>\n                    {list.some(\n                      x =>\n                        x.title === e.volumeInfo.title &&\n                        x.thumbnail === e.volumeInfo.imageLinks.thumbnail\n                    ) ? (\n                      <AiOutlineDelete />\n                    ) : (\n                      \"add to shelf\"\n                    )}\n                  </button>\n                )}\n              </StyledBook>\n            );\n          })}\n      </StyledContainer>\n      {renderModal(modalIndex)}\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { db, auth, google } from \"./firebase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport Search from \"./Search\";\nimport Modal from \"react-modal\";\n\nexport const StyledSignup = styled.form`\n  margin: 0 auto;\n  width: 85%;\n  max-width: 1400px;\n  display: block;\n  padding: 5px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 75%;\n  border-radius: 5px;\n  font-size: 16px;\n  padding: 5px;\n  margin: 5px;\n`;\n\nexport const StyledP = styled.p`\n  font-size: 12px;\n  margin: 10px;\n`;\n\nexport const StyledGoogleButton = styled.button`\n  height: 2.5em;\n  border-radius: 5px;\n  background-color: #d84b37;\n  font-size: 18px;\n  margin: 10px;\n`;\n\nexport const StyledButton = styled.button`\n  height: 2em;\n  border-radius: 5px;\n  font-size: 16px;\n  border-radius: 5px;\n  margin: 20px;\n  background-color: #00adb5;\n`;\n\nexport const StyledCard = styled.div`\n  margin: 0 auto;\n  width: 85%;\n  max-width: 1400px;\n  display: block;\n  padding: 5px;\n  text-align: center;\n`;\n\nfunction Signup({ username, isLoggedIn, theme }) {\n  const [modal, setModal] = useState(false);\n\n  const [resetPassInupt, setResetPassInput] = useState(\"\");\n\n  const [input, setInput] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const [formKey, setFormKey] = useState(uuidv4());\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInput(prev => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  }\n\n  function createAccount(e) {\n    e.preventDefault();\n    const username = input.username;\n    const email = input.email;\n    const password = input.password;\n    const confirmPassword = input.confirmPassword;\n\n    let reg = /^.{6,25}$/g;\n\n    if (!reg.test(password)) {\n      alert(\"password must be between 6 and 25 characters long\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"passwords do not match\");\n      return;\n    }\n\n    setInput({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n\n    setFormKey(uuidv4());\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(userCredential => {\n        return db.collection(\"users\").doc(userCredential.user.uid).set({\n          username: username,\n          email: email,\n          uid: userCredential.user.uid,\n        });\n      })\n      .catch(error => {\n        alert(\n          `Error. Could not create account. Please Try again. ${error.code}`\n        );\n      });\n  }\n\n  function createAccountWithGoogle(e) {\n    auth\n      .signInWithPopup(google)\n      .then(result => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // var token = credential.accessToken;\n        // The signed-in username info.\n        // var userCredential = result.user;\n        return db.collection(\"users\").doc(result.user.uid).set({\n          username: result.user.displayName,\n          email: result.user.email,\n          uid: result.user.uid,\n        });\n      })\n      .catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The firebase.auth.AuthCredential type that was used.\n        // var credential = error.credential;\n        alert(`Could not signup: ${errorCode}. ${errorMessage}`);\n      });\n  }\n\n  const modalStyles = {\n    overlay: {\n      position: \"fixed\",\n      backgroundColor: \"rgba(255, 255, 255, 0.75)\",\n    },\n    content: {\n      background: theme.background,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      overflow: \"auto\",\n      webkitoverflowscrolling: \"touch\",\n      textAlign: \"center\",\n      padding: \"20px\",\n    },\n  };\n\n  function renderModal() {\n    return (\n      <Modal\n        theme={theme}\n        isOpen={modal}\n        onRequestClose={() => setModal(false)}\n        style={modalStyles}\n      >\n        <StyledSignup onSubmit={resetPassword}>\n          <h3>Password Reset</h3>\n          <p>An email with reset instructions will be sent to:</p>\n          <input\n            style={{ margin: 20 }}\n            onChange={handlePassInput}\n            placeholder=\"yourname@email.com\"\n            type=\"email\"\n            name=\"email\"\n            required\n          ></input>\n          <br></br>\n          <button type=\"submit\" style={{ margin: 5 }}>\n            send email\n          </button>\n          <button onClick={() => setModal(false)} style={{ margin: 5 }}>\n            cancel\n          </button>\n        </StyledSignup>\n      </Modal>\n    );\n  }\n\n  function handlePassInput(e) {\n    setResetPassInput(e.currentTarget.value);\n  }\n\n  function resetPassword(e) {\n    e.preventDefault();\n    const resetEmail = resetPassInupt;\n    auth\n      .sendPasswordResetEmail(resetEmail)\n      .then(function () {\n        // Email sent.\n        alert(\"check your email for reset instructions\");\n        console.log(\"check your email for reset instructions\");\n        setModal(false);\n      })\n      .catch(function (error) {\n        // An error happened\n        alert(error + \"could not send reset password email\");\n        console.error(error + \"could not send reset password email\");\n      });\n  }\n\n  return (\n    <>\n      <div>\n        {isLoggedIn ? (\n          <>\n            <Search username={username} />\n          </>\n        ) : (\n          <>\n            <h3>Create Your Account</h3>\n            <StyledCard>\n              <StyledGoogleButton\n                name=\"googleSignIn\"\n                onClick={createAccountWithGoogle}\n              >\n                {<FcGoogle size={25} />} Sign up with Google\n              </StyledGoogleButton>\n            </StyledCard>\n            <StyledSignup key={formKey} onSubmit={createAccount}>\n              <h4>Register</h4>\n              <StyledInput\n                required\n                maxLength=\"75\"\n                name=\"username\"\n                placeholder=\"pick a username\"\n                onChange={handleChange}\n              ></StyledInput>\n              <br></br>\n              <StyledInput\n                type=\"email\"\n                required\n                minLength=\"6\"\n                maxLength=\"75\"\n                name=\"email\"\n                placeholder=\"your email\"\n                onChange={handleChange}\n              ></StyledInput>\n              <br></br>\n              <br></br>\n              <StyledInput\n                required\n                placeholder=\"create a password\"\n                name=\"password\"\n                type=\"password\"\n                onChange={handleChange}\n              ></StyledInput>\n              <StyledInput\n                required\n                placeholder=\"confirm your password\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                onChange={handleChange}\n              ></StyledInput>\n              <StyledP>Password must be at least 6 characters long</StyledP>\n              <StyledButton type=\"submit\">create my account</StyledButton>\n              <hr></hr>\n              <div>\n                <p>\n                  Already have an account?\n                  <br></br>\n                  <StyledButton>\n                    <Link to=\"/signin\">sign in</Link>\n                  </StyledButton>\n                </p>\n              </div>\n            </StyledSignup>\n            <StyledCard>\n              <p>\n                Forgot Your Password?\n                <br></br>\n                <StyledButton onClick={() => setModal(true)}>\n                  reset password\n                </StyledButton>\n              </p>\n            </StyledCard>\n          </>\n        )}\n      </div>\n      <div>{renderModal()}</div>\n    </>\n  );\n}\n\nexport default Signup;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { StyledBook } from \"./Search\";\nimport styled from \"styled-components\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { db, auth, google } from \"./firebase\";\nimport Modal from \"react-modal\";\nimport { StyledGoogleButton } from \"./Signup\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { FaBookReader } from \"react-icons/fa\";\nimport { FiUserCheck } from \"react-icons/fi\";\nimport { BiInfoSquare } from \"react-icons/bi\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport Loader from \"react-loader-spinner\";\nModal.setAppElement(\"#root\");\n\n// username with checkmark when signed in\nexport const StyledActiveUser = styled.p`\n  font-size: 18px;\n  display: inline;\n  padding: 10px;\n`;\n\nconst StyledAbout = styled.p`\n  margin: 0 auto;\n  max-width: 75%;\n  padding: 20px;\n`;\n\nconst StyledHomeButtons = styled.button`\n  display: inline;\n  margin: 20px;\n  padding: 5px;\n`;\n\nfunction Home({ isLoggedIn, username, user_UID, theme }) {\n  const NYT_API_KEY = process.env.REACT_APP_NYT_BESTSELLERS_API_KEY;\n\n  const [bestsellersList, setBestsellersList] = useState([]);\n  const [homeList, setHomeList] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [modalIndex, setModalIndex] = useState(-1);\n\n  useEffect(() => {\n    db.collection(`users/${user_UID}/shelf`).onSnapshot(snapshot => {\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        setHomeList(prev => [\n          ...prev,\n          {\n            title: data.title,\n            thumbnail_URL: data.thumbnail,\n            author: data.author,\n            description: data.description,\n          },\n        ]);\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    fetch(\n      `https://api.nytimes.com/svc/books/v3/lists/current/hardcover-nonfiction.json?api-key=${NYT_API_KEY}`\n    )\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(res => {\n        setBestsellersList(res.results.books);\n      })\n      .catch(error => console.error(`error: ${error}`));\n  }, []);\n\n  function addOrRemoveFromList(book) {\n    const book_ID = db\n      .collection(\"users\")\n      .doc(`${user_UID}`)\n      .collection(`shelf`)\n      .doc(`${book.title}`);\n\n    book_ID.get().then(docSnapshot => {\n      if (docSnapshot.exists) {\n        book_ID\n          .delete()\n          .then(() => console.log(\"book deleted\"))\n          .catch(error => alert(\"could not delete book\" + error));\n\n        setHomeList(homeList.filter(e => e.title !== book.title));\n      } else {\n        book_ID\n          .set({\n            title: book.title,\n            author: book.author,\n            thumbnail: book.book_image,\n            description: book.description,\n          })\n          .then(() => {\n            console.log(\"doc successfully written\");\n          })\n          .catch(error => {\n            alert(\"Please sign in or create an account to create your shelf\");\n            console.error(\"error writing doc: \", error);\n          });\n\n        setHomeList(prev => [\n          ...prev,\n          {\n            title: book.title,\n            author: book.author,\n            thumbnail: book.book_image,\n            description: book.description,\n          },\n        ]);\n      }\n    });\n  }\n\n  //  styles object for modal\n  const modalStyles = {\n    overlay: {\n      position: \"fixed\",\n      textAlign: \"center\",\n      backgroundColor: \"rgba(255, 255, 255, 0.75)\",\n    },\n    content: {\n      position: \"absolute\",\n      border: \"1px solid #ccc\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\",\n      borderRadius: \"5px\",\n      outline: \"none\",\n      textAlign: \"center\",\n      background: theme.background,\n    },\n  };\n\n  function renderModal(modalIndex) {\n    let modalTargetBook = bestsellersList[modalIndex];\n    return (\n      modalTargetBook && (\n        <Modal\n          theme={theme}\n          style={modalStyles}\n          isOpen={modal}\n          modalIndex={modalIndex}\n          onRequestClose={() => toggleModal()}\n        >\n          <img\n            src={modalTargetBook.book_image}\n            alt={modalTargetBook.title}\n            width=\"250\"\n          ></img>\n          <p>{modalTargetBook.description}</p>\n          <div>\n            <button onClick={() => toggleModal()}>close</button>\n          </div>\n        </Modal>\n      )\n    );\n  }\n\n  function toggleModal(index = -1) {\n    setModalIndex(index);\n    setModal(prev => !prev);\n  }\n\n  function handleGoogleSignin() {\n    auth\n      .signInWithPopup(google)\n      .then(result => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in username info.\n        var userCredential = result.user;\n        return db.collection(\"users\").doc(result.user.uid).set({\n          username: result.user.displayName,\n          email: result.user.email,\n          uid: result.user.uid,\n        });\n      })\n      .catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        alert(`Error: ${errorMessage}`);\n        // console.log([errorCode, errorMessage, credential, email]);\n      });\n  }\n\n  return (\n    <div>\n      {isLoggedIn ? (\n        <>\n          <div>\n            <FiUserCheck />\n            <StyledActiveUser>{`${username}`}</StyledActiveUser>\n          </div>\n          <StyledHomeButtons>\n            <Link to=\"/shelf\">go to my shelf</Link>\n          </StyledHomeButtons>\n          <StyledHomeButtons>\n            <Link to=\"/search\">search all books</Link>\n          </StyledHomeButtons>\n        </>\n      ) : (\n        <>\n          <h1>My Virtual Bookshelf</h1>\n          <FaBookReader size={140}></FaBookReader>\n          <StyledAbout>\n            Do you love e-books and audiobooks but miss putting finished books\n            on your bookshelf? Now you have a digital shelf to display your\n            collection. Create your virtual bookshelf and show people what\n            you've been reading!\n            <br></br>\n          </StyledAbout>\n          <div>\n            <h5>Create an Account or sign up with Google</h5>\n            <StyledGoogleButton style={{ backgroundColor: \"#00adb5\" }}>\n              <Link to=\"/signup\">Sign up</Link>\n            </StyledGoogleButton>\n            <StyledGoogleButton\n              name=\"googleSignIn\"\n              onClick={handleGoogleSignin}\n            >\n              {<FcGoogle size={25} />} Sign up with Google\n            </StyledGoogleButton>\n          </div>\n        </>\n      )}\n      <div>\n        <h3>What have you read lately?</h3>\n        <h5 style={{ textDecoration: \"underline\" }}>NYT Best Sellers</h5>\n        {!bestsellersList.length ? (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#00adb5\"\n            height={50}\n            width={50}\n            timeout={9000}\n          />\n        ) : (\n          bestsellersList.map((book, index) => {\n            return (\n              <StyledBook key={uuidv4()}>\n                <img src={book.book_image} alt={book.title}></img>\n                <div>{book.title}</div>\n                <div>{book.contributor}</div>\n                <div>Rank: {book.rank}</div>\n                <button onClick={() => toggleModal(index)}>\n                  {<BiInfoSquare size={20} />}\n                </button>\n                {isLoggedIn && (\n                  <button onClick={() => addOrRemoveFromList(book)}>\n                    {homeList.some(\n                      x => x.title === book.title && x.author === book.author\n                    ) ? (\n                      <AiOutlineDelete />\n                    ) : (\n                      \"add to shelf\"\n                    )}\n                  </button>\n                )}\n              </StyledBook>\n            );\n          })\n        )}\n      </div>\n      {renderModal(modalIndex)}\n      {!isLoggedIn && (\n        <>\n          <StyledAbout style={{ marginBottom: -15 }}>\n            Create an account to add books to your shelf\n          </StyledAbout>\n          <StyledHomeButtons>\n            <Link to=\"/signup\">Sign up</Link>\n          </StyledHomeButtons>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { db } from \"./firebase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { StyledBook, StyledContainer } from \"./Search\";\nimport { StyledSignup, StyledInput, StyledButton } from \"./Signup\";\nimport Modal from \"react-modal\";\nimport emailjs from \"emailjs-com\";\nimport { Link } from \"react-router-dom\";\nimport { GiBookshelf } from \"react-icons/gi\";\nimport { StyledActiveUser } from \"./Home\";\nimport { FiUserCheck } from \"react-icons/fi\";\nimport { AiOutlineDelete, AiOutlineClose } from \"react-icons/ai\";\nimport { BiInfoSquare } from \"react-icons/bi\";\n\nfunction Shlef({ user_UID, isLoggedIn, username, theme }) {\n  const EMAILJS_USERID = process.env.REACT_APP_EMAILJS_USERID;\n  const EMAILJS_SERVICEID = process.env.REACT_APP_EMAILJS_SERVICEID;\n  const EMAILJS_TEMPLATEID = process.env.REACT_APP_EMAILJS_TEMPLATEID;\n\n  const [list, setList] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [modalIndex, setModalIndex] = useState(-1);\n  const [emailModal, setEmailModal] = useState(false);\n  let isLoggedInAndList = isLoggedIn && list.length ? true : false;\n\n  // load previously saved books from db\n  useEffect(() => {\n    db.collection(`users/${user_UID}/shelf`).onSnapshot(snapshot => {\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        setList(prev => [\n          ...prev,\n          {\n            title: data.title,\n            thumbnail_URL: data.thumbnail,\n            author: data.author,\n            description: data.description,\n          },\n        ]);\n      });\n    });\n  }, []);\n\n  // styles object for modal\n  const modalStyles = {\n    overlay: {\n      position: \"fixed\",\n      backgroundColor: \"rgba(255, 255, 255, 0.75)\",\n    },\n    content: {\n      background: theme.background,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      overflow: \"auto\",\n      webkitoverflowscrolling: \"touch\",\n      textAlign: \"center\",\n      padding: \"20px\",\n    },\n  };\n\n  function renderBookModal(modalIndex) {\n    let modalTargetBook = list[modalIndex];\n    return (\n      modalTargetBook && (\n        <Modal\n          theme={theme}\n          style={modalStyles}\n          isOpen={modal}\n          // modalIndex={modalIndex}\n          onRequestClose={() => toggleBookModal()}\n        >\n          <button\n            style={{ position: \"absolute\", top: 5, left: 5, border: \"none\" }}\n            onClick={() => toggleBookModal()}\n          >\n            <AiOutlineClose size={20} />\n          </button>\n          <img\n            width=\"128\"\n            src={modalTargetBook.thumbnail_URL}\n            alt={modalTargetBook.title}\n          ></img>\n          <p>{modalTargetBook.description}</p>\n          <p>{`by ${modalTargetBook.author}`}</p>\n          <div>\n            <button onClick={() => toggleBookModal()}>close</button>\n          </div>\n        </Modal>\n      )\n    );\n  }\n\n  function toggleBookModal(index = -1) {\n    setModalIndex(index);\n    setModal(prev => !prev);\n  }\n\n  function removeFromList(e) {\n    const deleteConfirmed = window.confirm(\n      \"Are you sure you want to delete this book from your shelf?\"\n    );\n\n    if (deleteConfirmed) {\n      const book_ID = db\n        .collection(\"users\")\n        .doc(`${user_UID}`)\n        .collection(`shelf`)\n        .doc(`${e.title}`);\n\n      book_ID.get().then(docSnapshot => {\n        if (docSnapshot.exists) {\n          book_ID\n            .delete()\n            .then(() => console.log(\"book deleted\"))\n            .catch(error => console.error(\"could not delete book\" + error));\n\n          setList(list.filter(book => book.title === book_ID));\n        }\n      });\n    }\n  }\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(EMAILJS_SERVICEID, EMAILJS_TEMPLATEID, e.target, EMAILJS_USERID)\n      .then(\n        result => {\n          alert(\"Success! Your email has been sent. Thanks for sharing\");\n          console.log(result.text);\n        },\n        error => {\n          alert(\n            error +\n              \"Could not send email. Double check the email address and try again.\"\n          );\n          console.log(error.text);\n        }\n      );\n\n    setEmailModal(false);\n    e.target.reset();\n  }\n\n  function renderEmailModal() {\n    return (\n      <Modal\n        theme={theme}\n        isOpen={emailModal}\n        onRequestClose={() => setEmailModal(false)}\n        style={modalStyles}\n      >\n        <>\n          <StyledSignup className=\"contact-form\" onSubmit={sendEmail}>\n            <h4>Share your bookshelf</h4>\n            <p> email this shelf to:</p>\n            <input type=\"hidden\" name=\"username\" value={username} />\n            <input type=\"hidden\" name=\"link\" value={window.location.href} />\n            <StyledInput\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"name@email.com\"\n              required\n            />\n            <StyledButton type=\"submit\">share shelf</StyledButton>\n            <div>\n              <button\n                style={{ marginTop: 15, borderRadius: 5 }}\n                onClick={() => setEmailModal(false)}\n              >\n                close\n              </button>\n            </div>\n          </StyledSignup>\n        </>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      {isLoggedIn && (\n        <div>\n          <FiUserCheck />\n          <StyledActiveUser>{`${username}`}</StyledActiveUser>\n        </div>\n      )}\n      <h1>My Shelf</h1>\n      <div style={{ margin: \"0 auto\", padding: 30 }}>\n        <GiBookshelf size={170} />\n      </div>\n      <div>\n        {isLoggedInAndList && (\n          <button onClick={() => setEmailModal(true)}>email shelf</button>\n        )}\n      </div>\n      <StyledContainer>\n        {!list.length ? (\n          <>\n            <div style={{ margin: \"0 auto\", paddingTop: 40 }}>\n              <h4>\n                Your shelf is empty. Search for books to add to your shelf\n              </h4>\n              <button style={{ margin: 30 }}>\n                <Link to=\"/search\">Search</Link>\n              </button>\n            </div>\n            <br></br>\n          </>\n        ) : (\n          list.map((e, index) => {\n            return (\n              <StyledBook key={uuidv4()}>\n                <img\n                  src={e.thumbnail_URL}\n                  alt={e.title}\n                  width=\"128\"\n                  height=\"195\"\n                ></img>\n                <br></br>\n                <button onClick={() => toggleBookModal(index)}>\n                  {<BiInfoSquare />}\n                </button>\n                {isLoggedIn && (\n                  <button onClick={() => removeFromList(e)}>\n                    {<AiOutlineDelete />}\n                  </button>\n                )}\n              </StyledBook>\n            );\n          })\n        )}\n      </StyledContainer>\n      <div>{renderEmailModal()}</div>\n      <div>{renderBookModal(modalIndex)}</div>\n    </>\n  );\n}\n\nexport default Shlef;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport { auth, google } from \"./firebase\";\nimport Home from \"./Home\";\nimport { FaBookReader } from \"react-icons/fa\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport Modal from \"react-modal\";\nimport {\n  StyledGoogleButton,\n  StyledButton,\n  StyledInput,\n  StyledSignup,\n  StyledP,\n} from \"./Signup\";\n\nfunction SignIn({ isLoggedIn, setIsLoggedIn, username, setUsername, theme }) {\n  const [input, setInput] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [modal, setModal] = useState(false);\n  const [resetPassInupt, setResetPassInput] = useState(\"\");\n  const [formKey, setFormKey] = useState(uuidv4());\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInput(prev => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const email = input.email;\n    const password = input.password;\n\n    setInput({\n      email: \"\",\n      password: \"\",\n    });\n\n    setFormKey(uuidv4());\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then(userCredential => {\n        let username = userCredential.username;\n        setIsLoggedIn(true);\n      })\n      .catch(error => {\n        alert(`${error}. Could not sign in. Try again or reset your passowrd.`);\n        console.log(error.code);\n        console.log(error.message);\n      });\n  }\n\n  function handleClick() {\n    auth\n      .signInWithPopup(google)\n      .then(result => {\n        /** @type {firebase.auth.OAuthCredential} */\n        // var credential = result.credential;\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // var token = credential.accessToken;\n        // The signed-in username info.\n        setIsLoggedIn(true);\n      })\n      .catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The firebase.auth.AuthCredential type that was used.\n        // var credential = error.credential;\n        setIsLoggedIn(null);\n        alert(`${errorCode}${errorMessage}`);\n      });\n  }\n\n  const modalStyles = {\n    overlay: {\n      position: \"fixed\",\n      backgroundColor: \"rgba(255, 255, 255, 0.75)\",\n    },\n    content: {\n      background: theme.background,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      overflow: \"auto\",\n      webkitoverflowscrolling: \"touch\",\n      textAlign: \"center\",\n      padding: \"20px\",\n    },\n  };\n\n  function renderModal() {\n    return (\n      <Modal\n        theme={theme}\n        isOpen={modal}\n        onRequestClose={() => setModal(false)}\n        style={modalStyles}\n      >\n        <StyledSignup onSubmit={resetPassword}>\n          <h3>Password Reset</h3>\n          <p>An email with reset instructions will be sent to:</p>\n          <input\n            style={{ margin: 20 }}\n            onChange={handlePasswordInput}\n            placeholder=\"yourname@email.com\"\n            type=\"email\"\n            name=\"email\"\n            required\n          ></input>\n          <br></br>\n          <button type=\"submit\" style={{ margin: 5 }}>\n            send email\n          </button>\n          <button onClick={() => setModal(false)} style={{ margin: 5 }}>\n            cancel\n          </button>\n        </StyledSignup>\n      </Modal>\n    );\n  }\n\n  function handlePasswordInput(e) {\n    setResetPassInput(e.currentTarget.value);\n  }\n\n  function resetPassword(e) {\n    e.preventDefault();\n    const resetEmail = resetPassInupt;\n    auth\n      .sendPasswordResetEmail(resetEmail)\n      .then(function () {\n        // Email sent.\n        alert(\"check your email for reset instructions\");\n        setModal(false);\n      })\n      .catch(function (error) {\n        // An error happened\n        alert(\n          error +\n            \"could not send reset password email. Double check your email address and try again.\"\n        );\n        console.error(error + \"could not send reset password email\");\n      });\n  }\n\n  return (\n    <div>\n      {!isLoggedIn ? (\n        <div>\n          <h1>Sign in</h1>\n          <div>\n            <FaBookReader size={100} style={{ margin: 30 }}></FaBookReader>\n          </div>\n          {/* { For signin purposes. Reusing signup styled coponent} */}\n          <StyledSignup key={formKey} onSubmit={handleSubmit}>\n            <StyledInput\n              required\n              name=\"email\"\n              placeholder=\"email\"\n              onChange={handleChange}\n            ></StyledInput>\n            <br></br>\n            <StyledInput\n              required\n              placeholder=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={handleChange}\n            ></StyledInput>\n            <br></br>\n            <StyledButton>sign in</StyledButton>\n            <StyledP>or</StyledP>\n          </StyledSignup>\n          <StyledGoogleButton name=\"googleSignIn\" onClick={handleClick}>\n            {<FcGoogle size={25} />} Sign up with Google\n          </StyledGoogleButton>\n          <div>\n            <p>\n              Forgot Your Password?\n              <br></br>\n              <StyledButton onClick={() => setModal(true)}>\n                reset password\n              </StyledButton>\n            </p>\n          </div>\n          <div>{renderModal()}</div>\n        </div>\n      ) : (\n        <>\n          <Home isLoggedIn={isLoggedIn} username={username} theme={theme} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default SignIn;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html, body {\n    background: ${props => props.theme.background};\n    color: ${props => props.theme.color}; \n    transition: all .3s ease;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    text-align: center;\n    width: 85%;\n    margin: 0 auto;\n    padding: 20px;\n  }\n\n  a { \n    color: #1b262c;\n    text-decoration: none;\n  }\n\n  button {\n    border-radius: 5px;\n    margin: 3px;\n    margin-top: 15px;\n    border: 2px solid #222831;\n    background-color: #eeeeee;\n  }\n\n`;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { auth } from \"./firebase\";\nimport { db } from \"./firebase\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport Signup from \"./Signup\";\nimport Shelf from \"./Shelf\";\nimport Search from \"./Search\";\nimport SignIn from \"./SignIn\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { lightTheme } from \"./Theme\";\n\nfunction App() {\n  const [theme, setTheme] = useState(lightTheme);\n\n  const [username, setUsername] = useState(\"\");\n\n  const [user_UID, setUser_UID] = useState(null);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n\n  const [userEmail, setUserEmail] = useState(null);\n\n  // checks for sign-ins/outs\n  auth.onAuthStateChanged(googleAuthUser => {\n    if (googleAuthUser) {\n      const docRef = db.collection(\"users\").doc(`${googleAuthUser.uid}`);\n\n      docRef\n        .get()\n        .then(doc => {\n          if (doc.exists) {\n            let data = doc.data();\n            setUsername(googleAuthUser.displayName || data.username);\n            setUser_UID(googleAuthUser.uid);\n            setIsLoggedIn(true);\n            setUserEmail(googleAuthUser.email);\n            console.log(googleAuthUser.uid + \"is signed in\");\n          } else {\n            // doc.data() will be undefined in this case\n            alert(\"Error logging in. Please try again\");\n          }\n        })\n        .catch(error => {\n          alert(`${error}. Could not sign in. Please try again.`);\n          console.log(\"Error getting document:\", error);\n        });\n    } else {\n      // successful sign out\n      setIsLoggedIn(null);\n    }\n  });\n\n  return (\n    <>\n      <GlobalStyle theme={theme} />\n      <ThemeProvider theme={theme}>\n        <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n          <div className=\"App\">\n            <Navbar\n              theme={theme}\n              setTheme={setTheme}\n              username={username}\n              setUsername={setUsername}\n              isLoggedIn={isLoggedIn}\n              setIsLoggedIn={setIsLoggedIn}\n              setUserEmail={setUserEmail}\n            />\n            <div className=\"content\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home\n                    theme={theme}\n                    username={username}\n                    user_UID={user_UID}\n                    isLoggedIn={isLoggedIn}\n                  />\n                </Route>\n                <Route exact path=\"/search\">\n                  <Search\n                    theme={theme}\n                    user_UID={user_UID}\n                    isLoggedIn={isLoggedIn}\n                    username={username}\n                  />\n                </Route>\n                <Route exact path=\"/signin\">\n                  <SignIn\n                    theme={theme}\n                    username={username}\n                    setUsername={setUsername}\n                    setIsLoggedIn={setIsLoggedIn}\n                    isLoggedIn={isLoggedIn}\n                  />\n                </Route>\n                <Route exact path=\"/signup\">\n                  <Signup\n                    theme={theme}\n                    userEmail={userEmail}\n                    username={username}\n                    setUsername={setUsername}\n                    setIsLoggedIn={setIsLoggedIn}\n                    isLoggedIn={isLoggedIn}\n                  />\n                </Route>\n                <Route exact path=\"/shelf\">\n                  <Shelf\n                    theme={theme}\n                    username={username}\n                    user_UID={user_UID}\n                    isLoggedIn={isLoggedIn}\n                  />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}